// Mocks generated by Mockito 5.4.6 from annotations
// in serenya_app/test/core/services/timeline_preload_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:serenya_app/core/providers/health_data_provider.dart' as _i2;
import 'package:serenya_app/models/local_database_models.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HealthDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockHealthDataProvider extends _i1.Mock
    implements _i2.HealthDataProvider {
  MockHealthDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.SerenyaContent> get content => (super.noSuchMethod(
        Invocation.getter(#content),
        returnValue: <_i3.SerenyaContent>[],
      ) as List<_i3.SerenyaContent>);

  @override
  Map<String, List<_i3.LabResult>> get labResults => (super.noSuchMethod(
        Invocation.getter(#labResults),
        returnValue: <String, List<_i3.LabResult>>{},
      ) as Map<String, List<_i3.LabResult>>);

  @override
  Map<String, List<_i3.Vital>> get vitals => (super.noSuchMethod(
        Invocation.getter(#vitals),
        returnValue: <String, List<_i3.Vital>>{},
      ) as Map<String, List<_i3.Vital>>);

  @override
  Map<String, List<_i3.ChatMessage>> get chatMessages => (super.noSuchMethod(
        Invocation.getter(#chatMessages),
        returnValue: <String, List<_i3.ChatMessage>>{},
      ) as Map<String, List<_i3.ChatMessage>>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoadingMore => (super.noSuchMethod(
        Invocation.getter(#isLoadingMore),
        returnValue: false,
      ) as bool);

  @override
  bool get hasMoreData => (super.noSuchMethod(
        Invocation.getter(#hasMoreData),
        returnValue: false,
      ) as bool);

  @override
  int get currentPage => (super.noSuchMethod(
        Invocation.getter(#currentPage),
        returnValue: 0,
      ) as int);

  @override
  int get pageSize => (super.noSuchMethod(
        Invocation.getter(#pageSize),
        returnValue: 0,
      ) as int);

  @override
  int get totalContentCount => (super.noSuchMethod(
        Invocation.getter(#totalContentCount),
        returnValue: 0,
      ) as int);

  @override
  List<_i3.SerenyaContent> get documents => (super.noSuchMethod(
        Invocation.getter(#documents),
        returnValue: <_i3.SerenyaContent>[],
      ) as List<_i3.SerenyaContent>);

  @override
  List<_i3.SerenyaContent> get interpretations => (super.noSuchMethod(
        Invocation.getter(#interpretations),
        returnValue: <_i3.SerenyaContent>[],
      ) as List<_i3.SerenyaContent>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> loadContent({
    int? limit,
    bool? refresh = false,
    bool? resetPagination = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadContent,
          [],
          {
            #limit: limit,
            #refresh: refresh,
            #resetPagination: resetPagination,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> loadMoreContent({_i3.ContentType? contentType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadMoreContent,
          [],
          {#contentType: contentType},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> loadContentByType(
    _i3.ContentType? contentType, {
    int? limit,
    bool? refresh = false,
    bool? resetPagination = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadContentByType,
          [contentType],
          {
            #limit: limit,
            #refresh: refresh,
            #resetPagination: resetPagination,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addContent(_i3.SerenyaContent? content) =>
      (super.noSuchMethod(
        Invocation.method(
          #addContent,
          [content],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateContent(_i3.SerenyaContent? content) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContent,
          [content],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteContent(String? contentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteContent,
          [contentId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> loadLabResultsForContent(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadLabResultsForContent,
          [contentId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> loadVitalsForContent(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVitalsForContent,
          [contentId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> loadChatMessagesForContent(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadChatMessagesForContent,
          [contentId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addChatMessage(_i3.ChatMessage? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #addChatMessage,
          [message],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i3.UserPreference?> getPreference(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPreference,
          [key],
        ),
        returnValue: _i4.Future<_i3.UserPreference?>.value(),
      ) as _i4.Future<_i3.UserPreference?>);

  @override
  _i4.Future<void> setPreference(_i3.UserPreference? preference) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPreference,
          [preference],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>> getDatabaseStats() => (super.noSuchMethod(
        Invocation.method(
          #getDatabaseStats,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<void> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i3.SerenyaContent?> getDocumentById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDocumentById,
          [id],
        ),
        returnValue: _i4.Future<_i3.SerenyaContent?>.value(),
      ) as _i4.Future<_i3.SerenyaContent?>);

  @override
  _i4.Future<void> addDocument(_i3.SerenyaContent? document) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDocument,
          [document],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateDocument(_i3.SerenyaContent? document) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDocument,
          [document],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> loadDocuments({int? limit}) => (super.noSuchMethod(
        Invocation.method(
          #loadDocuments,
          [],
          {#limit: limit},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  List<_i3.SerenyaContent> getDocumentsByStatus(_i3.ProcessingStatus? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDocumentsByStatus,
          [status],
        ),
        returnValue: <_i3.SerenyaContent>[],
      ) as List<_i3.SerenyaContent>);

  @override
  _i4.Future<void> loadInterpretations() => (super.noSuchMethod(
        Invocation.method(
          #loadInterpretations,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void setPageSize(int? size) => super.noSuchMethod(
        Invocation.method(
          #setPageSize,
          [size],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.SerenyaContent? getCachedContent(String? contentId) =>
      (super.noSuchMethod(Invocation.method(
        #getCachedContent,
        [contentId],
      )) as _i3.SerenyaContent?);

  @override
  _i4.Future<void> preloadNextBatch({_i3.ContentType? contentType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #preloadNextBatch,
          [],
          {#contentType: contentType},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void applyPreloadedContent() => super.noSuchMethod(
        Invocation.method(
          #applyPreloadedContent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
