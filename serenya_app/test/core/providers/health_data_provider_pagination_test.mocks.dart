// Mocks generated by Mockito 5.4.6 from annotations
// in serenya_app/test/core/providers/health_data_provider_pagination_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:serenya_app/core/database/health_data_repository.dart' as _i2;
import 'package:serenya_app/models/local_database_models.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HealthDataRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHealthDataRepository extends _i1.Mock
    implements _i2.HealthDataRepository {
  MockHealthDataRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.SerenyaContent>> getAllContent({
    int? limit,
    int? offset,
    String? lastContentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllContent,
          [],
          {
            #limit: limit,
            #offset: offset,
            #lastContentId: lastContentId,
          },
        ),
        returnValue:
            _i3.Future<List<_i4.SerenyaContent>>.value(<_i4.SerenyaContent>[]),
      ) as _i3.Future<List<_i4.SerenyaContent>>);

  @override
  _i3.Future<_i4.SerenyaContent?> getContentById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentById,
          [id],
        ),
        returnValue: _i3.Future<_i4.SerenyaContent?>.value(),
      ) as _i3.Future<_i4.SerenyaContent?>);

  @override
  _i3.Future<List<_i4.SerenyaContent>> getContentByType(
    _i4.ContentType? contentType, {
    int? limit,
    int? offset,
    String? lastContentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentByType,
          [contentType],
          {
            #limit: limit,
            #offset: offset,
            #lastContentId: lastContentId,
          },
        ),
        returnValue:
            _i3.Future<List<_i4.SerenyaContent>>.value(<_i4.SerenyaContent>[]),
      ) as _i3.Future<List<_i4.SerenyaContent>>);

  @override
  _i3.Future<int> getContentCount({_i4.ContentType? contentType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentCount,
          [],
          {#contentType: contentType},
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<bool> hasMoreContent({
    _i4.ContentType? contentType,
    String? lastContentId,
    int? currentCount = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasMoreContent,
          [],
          {
            #contentType: contentType,
            #lastContentId: lastContentId,
            #currentCount: currentCount,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> insertContent(_i4.SerenyaContent? content) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertContent,
          [content],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateContent(_i4.SerenyaContent? content) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContent,
          [content],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteContent(String? contentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteContent,
          [contentId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.LabResult>> getLabResultsForContent(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLabResultsForContent,
          [contentId],
        ),
        returnValue: _i3.Future<List<_i4.LabResult>>.value(<_i4.LabResult>[]),
      ) as _i3.Future<List<_i4.LabResult>>);

  @override
  _i3.Future<List<_i4.Vital>> getVitalsForContent(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVitalsForContent,
          [contentId],
        ),
        returnValue: _i3.Future<List<_i4.Vital>>.value(<_i4.Vital>[]),
      ) as _i3.Future<List<_i4.Vital>>);

  @override
  _i3.Future<List<_i4.ChatMessage>> getChatMessagesForContent(
          String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChatMessagesForContent,
          [contentId],
        ),
        returnValue:
            _i3.Future<List<_i4.ChatMessage>>.value(<_i4.ChatMessage>[]),
      ) as _i3.Future<List<_i4.ChatMessage>>);

  @override
  _i3.Future<void> insertChatMessage(_i4.ChatMessage? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertChatMessage,
          [message],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.UserPreference?> getPreference(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPreference,
          [key],
        ),
        returnValue: _i3.Future<_i4.UserPreference?>.value(),
      ) as _i3.Future<_i4.UserPreference?>);

  @override
  _i3.Future<void> setPreference(_i4.UserPreference? preference) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPreference,
          [preference],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> getDatabaseStats() => (super.noSuchMethod(
        Invocation.method(
          #getDatabaseStats,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
