// Mocks generated by Mockito 5.4.4 from annotations
// in serenya_app/test/performance/auth_performance_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i5;

import 'package:dio/dio.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:serenya_app/services/api_service.dart' as _i3;
import 'package:serenya_app/services/auth_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResult_0 extends _i1.SmartFake implements _i2.AuthResult {
  _FakeAuthResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResult_1<T> extends _i1.SmartFake implements _i3.ApiResult<T> {
  _FakeApiResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i2.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.AuthResult> signInWithGoogle({
    Map<String, dynamic>? consentData,
    bool? requireBiometric = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
          {
            #consentData: consentData,
            #requireBiometric: requireBiometric,
          },
        ),
        returnValue: _i4.Future<_i2.AuthResult>.value(_FakeAuthResult_0(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
            {
              #consentData: consentData,
              #requireBiometric: requireBiometric,
            },
          ),
        )),
      ) as _i4.Future<_i2.AuthResult>);

  @override
  _i4.Future<bool> requiresBiometricReauth() => (super.noSuchMethod(
        Invocation.method(
          #requiresBiometricReauth,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<Map<String, dynamic>?> getCurrentSession() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentSession,
          [],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<Map<String, dynamic>?> getUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<bool> isNetworkAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isNetworkAvailable,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i3.ApiResult<Map<String, dynamic>>> uploadDocument({
    required _i5.File? file,
    required String? fileName,
    required String? fileType,
    _i6.ProgressCallback? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadDocument,
          [],
          {
            #file: file,
            #fileName: fileName,
            #fileType: fileType,
            #onProgress: onProgress,
          },
        ),
        returnValue: _i4.Future<_i3.ApiResult<Map<String, dynamic>>>.value(
            _FakeApiResult_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #uploadDocument,
            [],
            {
              #file: file,
              #fileName: fileName,
              #fileType: fileType,
              #onProgress: onProgress,
            },
          ),
        )),
      ) as _i4.Future<_i3.ApiResult<Map<String, dynamic>>>);

  @override
  _i4.Future<_i3.ApiResult<Map<String, dynamic>>> getProcessingStatus(
          String? jobId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProcessingStatus,
          [jobId],
        ),
        returnValue: _i4.Future<_i3.ApiResult<Map<String, dynamic>>>.value(
            _FakeApiResult_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #getProcessingStatus,
            [jobId],
          ),
        )),
      ) as _i4.Future<_i3.ApiResult<Map<String, dynamic>>>);

  @override
  _i4.Future<_i3.ApiResult<Map<String, dynamic>>> getInterpretation(
          String? jobId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getInterpretation,
          [jobId],
        ),
        returnValue: _i4.Future<_i3.ApiResult<Map<String, dynamic>>>.value(
            _FakeApiResult_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #getInterpretation,
            [jobId],
          ),
        )),
      ) as _i4.Future<_i3.ApiResult<Map<String, dynamic>>>);

  @override
  _i4.Future<_i3.ApiResult<Map<String, dynamic>>> generateDoctorReport({
    required String? documentId,
    String? reportType = r'medical_summary',
    Map<String, dynamic>? additionalContext,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateDoctorReport,
          [],
          {
            #documentId: documentId,
            #reportType: reportType,
            #additionalContext: additionalContext,
          },
        ),
        returnValue: _i4.Future<_i3.ApiResult<Map<String, dynamic>>>.value(
            _FakeApiResult_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #generateDoctorReport,
            [],
            {
              #documentId: documentId,
              #reportType: reportType,
              #additionalContext: additionalContext,
            },
          ),
        )),
      ) as _i4.Future<_i3.ApiResult<Map<String, dynamic>>>);

  @override
  _i4.Future<_i3.ApiResult<bool>> retryProcessing(
    String? jobId, {
    int? attemptNumber = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #retryProcessing,
          [jobId],
          {#attemptNumber: attemptNumber},
        ),
        returnValue:
            _i4.Future<_i3.ApiResult<bool>>.value(_FakeApiResult_1<bool>(
          this,
          Invocation.method(
            #retryProcessing,
            [jobId],
            {#attemptNumber: attemptNumber},
          ),
        )),
      ) as _i4.Future<_i3.ApiResult<bool>>);

  @override
  _i4.Future<_i3.ApiResult<Map<String, dynamic>>> getUserProfile() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i4.Future<_i3.ApiResult<Map<String, dynamic>>>.value(
            _FakeApiResult_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
      ) as _i4.Future<_i3.ApiResult<Map<String, dynamic>>>);

  @override
  _i4.Future<_i3.ApiResult<Map<String, dynamic>>> updateUserProfile(
          Map<String, dynamic>? profileData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [profileData],
        ),
        returnValue: _i4.Future<_i3.ApiResult<Map<String, dynamic>>>.value(
            _FakeApiResult_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #updateUserProfile,
            [profileData],
          ),
        )),
      ) as _i4.Future<_i3.ApiResult<Map<String, dynamic>>>);

  @override
  _i4.Future<_i3.ApiResult<Map<String, dynamic>>> healthCheck() =>
      (super.noSuchMethod(
        Invocation.method(
          #healthCheck,
          [],
        ),
        returnValue: _i4.Future<_i3.ApiResult<Map<String, dynamic>>>.value(
            _FakeApiResult_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #healthCheck,
            [],
          ),
        )),
      ) as _i4.Future<_i3.ApiResult<Map<String, dynamic>>>);
}
