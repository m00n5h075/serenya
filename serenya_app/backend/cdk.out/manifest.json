{
  "version": "48.0.0",
  "artifacts": {
    "SerenyaBackend-dev.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "SerenyaBackend-dev.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "SerenyaBackend-dev": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/eu-west-1",
      "properties": {
        "templateFile": "SerenyaBackend-dev.template.json",
        "terminationProtection": false,
        "tags": {
          "Compliance": "HIPAA",
          "Component": "Backend",
          "CostCenter": "Engineering",
          "DataClassification": "PHI-Temporary",
          "Environment": "dev",
          "Owner": "Serenya-Health",
          "Project": "Serenya"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-eu-west-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-eu-west-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1/3ab16f030ceb00dd1333b3260a7604671fa488d6600e1b93eb15da744370694f.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "SerenyaBackend-dev.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-eu-west-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        },
        "stackName": "serenya-backend-dev"
      },
      "dependencies": [
        "SerenyaBackend-dev.assets"
      ],
      "metadata": {
        "/SerenyaBackend-dev": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Compliance",
                "Value": "HIPAA"
              },
              {
                "Key": "Component",
                "Value": "Backend"
              },
              {
                "Key": "CostCenter",
                "Value": "Engineering"
              },
              {
                "Key": "DataClassification",
                "Value": "PHI-Temporary"
              },
              {
                "Key": "Environment",
                "Value": "dev"
              },
              {
                "Key": "Owner",
                "Value": "Serenya-Health"
              },
              {
                "Key": "Project",
                "Value": "Serenya"
              }
            ]
          }
        ],
        "/SerenyaBackend-dev/SerenyaEncryptionKey/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaEncryptionKey30AB90B6"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcD4692594"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet1SubnetF87D5348"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet1RouteTable106C458A"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet1RouteTableAssociation36035CC6"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet1DefaultRoute47ACA6A8"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet1EIPAA478EBC"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet1NATGatewayC096DC8D"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet2SubnetA76F987B"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet2RouteTable41C6D820"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet2RouteTableAssociation9A30520B"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPublicSubnet2DefaultRoute1C653722"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPrivateSubnet1Subnet2E20D858"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPrivateSubnet1RouteTableE7AD75E2"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPrivateSubnet1RouteTableAssociationBF7668BA"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPrivateSubnet1DefaultRoute9EE28854"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPrivateSubnet2SubnetD7BD4087"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPrivateSubnet2RouteTable2474897C"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPrivateSubnet2RouteTableAssociation8442D9D3"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcPrivateSubnet2DefaultRouteBBBE9AC0"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/DatabaseSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcDatabaseSubnet1Subnet7E7692B7"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/DatabaseSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcDatabaseSubnet1RouteTableE1B7D741"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/DatabaseSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcDatabaseSubnet1RouteTableAssociation39B8EE4B"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/DatabaseSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcDatabaseSubnet2SubnetABEADD14"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/DatabaseSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcDatabaseSubnet2RouteTable0800FF4F"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/DatabaseSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcDatabaseSubnet2RouteTableAssociation15F27ACA"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcIGW6F2ACAD3"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcVPCGWD9461E63"
          }
        ],
        "/SerenyaBackend-dev/SerenyaVpc/RestrictDefaultSecurityGroupCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaVpcRestrictDefaultSecurityGroupCustomResource0A1AE9E3"
          }
        ],
        "/SerenyaBackend-dev/Custom::VpcRestrictDefaultSGCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/SerenyaBackend-dev/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
          }
        ],
        "/SerenyaBackend-dev/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E"
          }
        ],
        "/SerenyaBackend-dev/DatabaseSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSecret86DBB7B3"
          }
        ],
        "/SerenyaBackend-dev/DatabaseSecret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSecretAttachment9A63A3D4"
          }
        ],
        "/SerenyaBackend-dev/DatabaseSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSecurityGroup7319C0F6"
          }
        ],
        "/SerenyaBackend-dev/DatabaseSecurityGroup/from SerenyaBackenddevLambdaSecurityGroupC486A3BA:5432": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSecurityGroupfromSerenyaBackenddevLambdaSecurityGroupC486A3BA543291013DF3"
          }
        ],
        "/SerenyaBackend-dev/LambdaSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LambdaSecurityGroup0BD9FC99"
          }
        ],
        "/SerenyaBackend-dev/SerenyaDatabase/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaDatabaseSubnetGroup50CA9027"
          }
        ],
        "/SerenyaBackend-dev/SerenyaDatabase/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaDatabase21D84656"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApiSecrets/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiSecretsA24BF8CE"
          }
        ],
        "/SerenyaBackend-dev/TempFilesBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TempFilesBucketC6626CD1"
          }
        ],
        "/SerenyaBackend-dev/TempFilesBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TempFilesBucketPolicy4E1F091D"
          }
        ],
        "/SerenyaBackend-dev/TempFilesBucket/AutoDeleteObjectsCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TempFilesBucketAutoDeleteObjectsCustomResource197835EE"
          }
        ],
        "/SerenyaBackend-dev/Custom::S3AutoDeleteObjectsCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/SerenyaBackend-dev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
          }
        ],
        "/SerenyaBackend-dev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F"
          }
        ],
        "/SerenyaBackend-dev/LambdaExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LambdaExecutionRoleD5C26073"
          }
        ],
        "/SerenyaBackend-dev/AuthFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthFunctionA1CD5E0F"
          }
        ],
        "/SerenyaBackend-dev/AuthFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthFunctionLogRetention5816710E"
          }
        ],
        "/SerenyaBackend-dev/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ],
        "/SerenyaBackend-dev/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB"
          }
        ],
        "/SerenyaBackend-dev/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A"
          }
        ],
        "/SerenyaBackend-dev/UserProfileFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserProfileFunctionF5A2461B"
          }
        ],
        "/SerenyaBackend-dev/UserProfileFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserProfileFunctionLogRetention1CA0BC00"
          }
        ],
        "/SerenyaBackend-dev/UploadFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadFunction18838DD8"
          }
        ],
        "/SerenyaBackend-dev/UploadFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadFunctionLogRetention873B5782"
          }
        ],
        "/SerenyaBackend-dev/ProcessFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProcessFunction7E4ECD78"
          }
        ],
        "/SerenyaBackend-dev/ProcessFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProcessFunctionLogRetention57E0A35A"
          }
        ],
        "/SerenyaBackend-dev/StatusFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StatusFunction598A4497"
          }
        ],
        "/SerenyaBackend-dev/StatusFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StatusFunctionLogRetention86438395"
          }
        ],
        "/SerenyaBackend-dev/ResultFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ResultFunctionB52330A7"
          }
        ],
        "/SerenyaBackend-dev/ResultFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ResultFunctionLogRetention8F9B47D5"
          }
        ],
        "/SerenyaBackend-dev/RetryFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RetryFunction31519513"
          }
        ],
        "/SerenyaBackend-dev/RetryFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "RetryFunctionLogRetention48D40D10"
          }
        ],
        "/SerenyaBackend-dev/DoctorReportFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DoctorReportFunction156B2584"
          }
        ],
        "/SerenyaBackend-dev/DoctorReportFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DoctorReportFunctionLogRetention7F741CDF"
          }
        ],
        "/SerenyaBackend-dev/AuthorizerFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthorizerFunctionB4DBAA43"
          }
        ],
        "/SerenyaBackend-dev/AuthorizerFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthorizerFunctionLogRetention20FD5AF7"
          }
        ],
        "/SerenyaBackend-dev/AuthorizerFunction/SerenyaBackenddevJWTAuthorizer6D9C8E7E:Permissions": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthorizerFunctionSerenyaBackenddevJWTAuthorizer6D9C8E7EPermissions9F0806F8"
          }
        ],
        "/SerenyaBackend-dev/DatabaseInitFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseInitFunction432692BE"
          }
        ],
        "/SerenyaBackend-dev/DatabaseInitFunction/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseInitFunctionLogRetention1C9B6487"
          }
        ],
        "/SerenyaBackend-dev/JWTAuthorizer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "JWTAuthorizerE8D8D90E"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApi961F1E55"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/CloudWatchRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiCloudWatchRole9E2E72EB"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Account": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiAccount6A099A6F"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiDeployment9A430DAEb1f7cf150d6faa49132bf0d3eef4c827"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/DeploymentStage.dev/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiDeploymentStagedevC49EB2C2"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiEndpoint7B880D7A"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiOPTIONS2436B4B6"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/auth/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiauthA4A1C07F"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/auth/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiauthOPTIONS9C0749B3"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/auth/google/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiauthgoogle2CDDBC50"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/auth/google/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiauthgoogleOPTIONS1BDA8C9D"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/auth/google/POST/ApiPermission.SerenyaBackenddevSerenyaApiC0B2749B.POST..auth.google": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiauthgooglePOSTApiPermissionSerenyaBackenddevSerenyaApiC0B2749BPOSTauthgoogle3D67A8D6"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/auth/google/POST/ApiPermission.Test.SerenyaBackenddevSerenyaApiC0B2749B.POST..auth.google": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiauthgooglePOSTApiPermissionTestSerenyaBackenddevSerenyaApiC0B2749BPOSTauthgoogleE5113C7D"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/auth/google/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiauthgooglePOST7615B967"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/user/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiuserFF13A6AA"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/user/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiuserOPTIONSF8FE17BC"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/user/profile/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiuserprofileCB053673"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/user/profile/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiuserprofileOPTIONS74F7AA86"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/user/profile/GET/ApiPermission.SerenyaBackenddevSerenyaApiC0B2749B.GET..user.profile": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiuserprofileGETApiPermissionSerenyaBackenddevSerenyaApiC0B2749BGETuserprofileD17F8AA3"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/user/profile/GET/ApiPermission.Test.SerenyaBackenddevSerenyaApiC0B2749B.GET..user.profile": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiuserprofileGETApiPermissionTestSerenyaBackenddevSerenyaApiC0B2749BGETuserprofile12B89797"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/user/profile/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiuserprofileGET3FBD1683"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapi446775AA"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiOPTIONSFB35DE81"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv14ABB7B5A"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1OPTIONSD1E10A59"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1process29862BC2"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processOPTIONS1D179255"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/upload/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processuploadD4F3885C"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/upload/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processuploadOPTIONSEE80B0CE"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/upload/POST/ApiPermission.SerenyaBackenddevSerenyaApiC0B2749B.POST..api.v1.process.upload": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processuploadPOSTApiPermissionSerenyaBackenddevSerenyaApiC0B2749BPOSTapiv1processupload6FB2AC3C"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/upload/POST/ApiPermission.Test.SerenyaBackenddevSerenyaApiC0B2749B.POST..api.v1.process.upload": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processuploadPOSTApiPermissionTestSerenyaBackenddevSerenyaApiC0B2749BPOSTapiv1processuploadDDB6212A"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/upload/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processuploadPOST4E4A4315"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/status/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processstatus741E1B89"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/status/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processstatusOPTIONS05404032"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/status/{jobId}/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processstatusjobId56622832"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/status/{jobId}/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processstatusjobIdOPTIONS3316DFD1"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/status/{jobId}/GET/ApiPermission.SerenyaBackenddevSerenyaApiC0B2749B.GET..api.v1.process.status.{jobId}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processstatusjobIdGETApiPermissionSerenyaBackenddevSerenyaApiC0B2749BGETapiv1processstatusjobIdF78FD46E"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/status/{jobId}/GET/ApiPermission.Test.SerenyaBackenddevSerenyaApiC0B2749B.GET..api.v1.process.status.{jobId}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processstatusjobIdGETApiPermissionTestSerenyaBackenddevSerenyaApiC0B2749BGETapiv1processstatusjobIdBCDF8C70"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/status/{jobId}/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processstatusjobIdGET29689FC3"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/result/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processresult295F2A1C"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/result/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processresultOPTIONS4BB0ED9F"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/result/{jobId}/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processresultjobId0A980F14"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/result/{jobId}/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processresultjobIdOPTIONS94949444"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/result/{jobId}/GET/ApiPermission.SerenyaBackenddevSerenyaApiC0B2749B.GET..api.v1.process.result.{jobId}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processresultjobIdGETApiPermissionSerenyaBackenddevSerenyaApiC0B2749BGETapiv1processresultjobId46E02565"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/result/{jobId}/GET/ApiPermission.Test.SerenyaBackenddevSerenyaApiC0B2749B.GET..api.v1.process.result.{jobId}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processresultjobIdGETApiPermissionTestSerenyaBackenddevSerenyaApiC0B2749BGETapiv1processresultjobId47482300"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/result/{jobId}/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processresultjobIdGETFB4D756B"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/retry/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processretryCD5D1F00"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/retry/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processretryOPTIONS2BCD5A28"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/retry/{jobId}/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processretryjobId4A76E717"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/retry/{jobId}/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processretryjobIdOPTIONS6FC39338"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/retry/{jobId}/POST/ApiPermission.SerenyaBackenddevSerenyaApiC0B2749B.POST..api.v1.process.retry.{jobId}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processretryjobIdPOSTApiPermissionSerenyaBackenddevSerenyaApiC0B2749BPOSTapiv1processretryjobIdD485901B"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/retry/{jobId}/POST/ApiPermission.Test.SerenyaBackenddevSerenyaApiC0B2749B.POST..api.v1.process.retry.{jobId}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processretryjobIdPOSTApiPermissionTestSerenyaBackenddevSerenyaApiC0B2749BPOSTapiv1processretryjobId6B4A7A5C"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/retry/{jobId}/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processretryjobIdPOST8FFA0E78"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/doctor-report/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processdoctorreport764BEBC9"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/doctor-report/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processdoctorreportOPTIONS2BFFF0B0"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/doctor-report/POST/ApiPermission.SerenyaBackenddevSerenyaApiC0B2749B.POST..api.v1.process.doctor-report": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processdoctorreportPOSTApiPermissionSerenyaBackenddevSerenyaApiC0B2749BPOSTapiv1processdoctorreportA6F92A67"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/doctor-report/POST/ApiPermission.Test.SerenyaBackenddevSerenyaApiC0B2749B.POST..api.v1.process.doctor-report": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processdoctorreportPOSTApiPermissionTestSerenyaBackenddevSerenyaApiC0B2749BPOSTapiv1processdoctorreport1D8B9074"
          }
        ],
        "/SerenyaBackend-dev/SerenyaApi/Default/api/v1/process/doctor-report/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SerenyaApiapiv1processdoctorreportPOST398F6D27"
          }
        ],
        "/SerenyaBackend-dev/ApiGatewayLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayLogGroupA9770429"
          }
        ],
        "/SerenyaBackend-dev/ApiUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiUrl"
          }
        ],
        "/SerenyaBackend-dev/ApiId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiId"
          }
        ],
        "/SerenyaBackend-dev/TempBucketName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TempBucketName"
          }
        ],
        "/SerenyaBackend-dev/KmsKeyId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "KmsKeyId"
          }
        ],
        "/SerenyaBackend-dev/DatabaseHost": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseHost"
          }
        ],
        "/SerenyaBackend-dev/DatabasePort": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabasePort"
          }
        ],
        "/SerenyaBackend-dev/DatabaseSecretArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSecretArn"
          }
        ],
        "/SerenyaBackend-dev/VpcId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcId"
          }
        ],
        "/SerenyaBackend-dev/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/SerenyaBackend-dev/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/SerenyaBackend-dev/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "SerenyaBackend-dev"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": false,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1027.0"
}